.. (ql:quickload :weyl)
.. (in-package :weyl)


Algebraic Structures
====================
This chapter begins with a discussion of Weyl's representation of ideals and 
spectrums of rings. Taking the quotient of these structures and their rings 
gives leads to domains that can be used to represent algebraic numbers and 
algebraic functions.

Ideals (10.1)
-------------
Recall that an ideal of a commutative ring R is an additive subgroup of R such 
that the product of any element of the ideal by an element of R is an element 
of the ideal. Thus the ideal is an R module.

Ideals are a slightly unusual objects in Weyl since they are treated like domain 
elements (arithmetic operations can be applied to ideals), but are in fact 
domains. One might think that they should be both domains and domains elements, 
and perhaps they will be in the future, but doing so now would be problematic. 
If they were domain elements, they would have to be elements of some domain and 
there is no natural domain that would suffice. (The spectrum of the ring only
includes the prime ideals, and additional possesses a topology.)

The set of classes used to represent ideals is given in Figure 10.1. All ideals 
are subclasses of the class ideal. Every ideal is represented by a (not 
necessarily minimal) list of elements that generate the ideal. Currently, 
Weyl is only capable of representing ideals that are finitely generated. Ideals
can be created using the following function:

.. function make-ideal domain &rest elements       [Function]

   Creates the ideal of the ring domain, which is generated by the polynomials 
   polys. The polynomials must all come from the same ring. Initially, we have 
   only implemented the Gröbner basis algorithm for polynomials over fields, 
   the domain of the polynomials must be a polynomial ring over a field.
   
There are two subclasses of the class ideal: PID-ideal and grobner-basis. If 
the ring of the ideal is a principal ideal domain, then make-ideal will create 
an instance of PID-ideal. The ring of the ideal is a polynomial ring then a 
grobner-basis ideal will be created.[1]_ Two basic arithmetic operations are 
provided for manipulating ideals: addition and multiplication. 
Given the ideal ideals A = (a_1, ..., a_m ) and B = (b_1, ..., b_n), their 
sum is defined to be

.. math::

                A+B = (a_1,\ldots,a_m,b_1,\ldots,b_n)

and their product is defined to be

.. math::

               A \cdot B = (a_1 b_1,a_1 b_2,\ldots,a_1 b_n, a_2 b_1,
               \ldots,a_m b_{n-1}, a_m b_n).
               

The standard + and * operators in Weyl are thus overloaded to work with ideals 
also. This is illustrated in the following simple examples:

.. code-block:: lisp

    (defvar  a (make-ideal (get-rational-integers) 12))
    => A

    (defvar  b (make-ideal (get-rational-integers) 15))
    => B

An ideal is printed as a parenthesized list of its generators. Since we know 
that Z is a principal ideal domain, the list of generators will only have one 
element.[2]_

.. code-block:: lisp

    A
    => #Id(12)

    B
    => #Id(15)

    (+ a b)
    => #Id(3)

    (* a b)
    => #Id(180)


For a more sophisticated example consider:


.. code-block:: lisp

    (defvar r (get-polynomial-ring (get-rational-numbers) '(x y)))
    => R
    
    R
    => Q[x, y]


    ;;(setq a (make-ideal r (+ (* 'x 'x 'x) (* 'y 'y)) (* 'x 'y)))
    ;; error

    ;(setq b (+ a (* a a)))
    ;#Id(x^2 y^2, x^4 y + x y^3, x^4 y +
    ;x y^3, x^6 + 2 x^3 y^2 + y^4, x^3 + y^2, x y)

Although the last two results do exhibit bases for a ideals, they are not 
the minimal bases. A reduced basis can be obtained by applying the following 
routine.


.. function:: reduce-basis ideal   [Function]

   Reduces the basis provided for the ideal using the techniques available. For 
   polynomials ideals this means computing the Gröbner basis assuming a monomial 
   ordering has been provided.

When this routine is applied to the previous example we have:

.. code-block:: lisp

    > (reduce-basis a)
    #Id( x y, x^3 + y^2,y^3)
    > (reduce-basis b)}
    #Id( x y, x^3 + y^2,y^3)

So we see that a is equal to (+ a (* a a)). Further notice that the reduce 
basis has more elements that the original basis.

The Spectrum of a Ring (10.2)
-----------------------------
This section needs to discuss the topological structure of the spectrum as well.

.. function:: spectrum Ring  [Function]

   This function returns a new domain which is the spectrum of ring. The 
   elements of this domain are the ideals of ring. (Need to gure out how the 
   topology of Spec R ts into all this.)
   
Algebraic Extensions (10.3)
---------------------------

.. function:: algebraic-degree domain1 domain2   [Function]

   This function checks to ensure that domain2 is a subring of domain1 and, 
   if so, returns the algebraic degree of domain2 over domain1.
   
   
Algebraic Closures (10.4)
-------------------------
Need to special case the algebraic closure of the real numbers. This is the 
only algebraic closure that is of nite degree.


